<?php

  /**
   * Agenda CLass
   *
   * @package		Prosa
   */
class Agenda extends Object {

      public $clients = array();
      public $users = array();
      public $prosa = array();
      public $errors = array();

      /**
       * Agenda()
       * Creates a Agenda object from the DB.
       *
       * @param	$id_threshold (optional) If set populates values from DB record.
       *
       */
      function Agenda()
      {
          $this->load();
      }

	/**
	* load()
	*
	*/
	private function load() { 
		$this->load_clients(); 
		/*$ldap = new LDAP();
		if (count($ldap->error) == 0) { 

			foreach ($this->clients as $k => $cli) {
				
				$branch = "OU=" . $cli->code . ",OU=Nacional,OU=Cliente,OU=prosa.com.mx"; 
				$users = $ldap->search_branch($branch);
				foreach ($users as $j => $usr) {
					$this->users[] = $usr; 
					$this->clients[$k]->users[] = $usr;
				}
				
				$branch = "OU=" . $cli->code . ",OU=Internacional,OU=Cliente,OU=prosa.com.mx"; 
				$users = $ldap->search_branch($branch);
				foreach ($users as $j => $usr) {
					$this->users[] = $usr; 
					$this->clients[$k]->users[] = $usr;
				}
				
			}
			
			
			/* Usuarios prosa 
			$branch = "OU=GenteProsa,OU=prosa.com.mx"; 
			$users = $ldap->search_branch($branch);
			foreach ($users as $j => $usr) {
				$this->prosa[] = $usr;  
			} 
		} else {
			global $error; 
			$this->set_error('Unable to connect to LDAP Server.', LOG_PRC_DOWN, 3); 
			$error .= 'Unable to connect to LDAP Server.'; 
		} 
			*/
		
		$us1 = new stdClass;
		$us1->user = 'bhguevar';
		$us1->name = 'bhguevar';
		$us1->email = 'bhguevar';
		
		$us2 = new stdClass;
		$us2->user = 'aontiver';
		$us2->name = 'aontiver';
		$us2->email = 'aontiver';
		
		$us3 = new stdClass;
		$us3->user = 'mxbdcal1';
		$us3->name = 'mxbdcal1';
		$us3->email = 'mxbdcal1';
			
		$this->prosa = array(  $us1, $us2, $us3 );  
	}

      /**
       * load_clients()
       */
      private function load_clients()
      {
          $db = new oracle_db();
          $query = "SELECT * FROM " . PFX_MAIN_DB . "client WHERE cl_status > 0 ";
          $clients = $db->query($query);
          if ($clients)
          {
              foreach ($clients as $k => $cli)
              {
                  $client = new stdClass;
                  $client->id_client = $cli['ID_CLIENT'];
                  $client->client = $cli['CL_CLIENT'];
                  $client->code = $cli['CL_CODE'];
                  $this->clients[] = $client;
              }
          }
          else
          {
              $this->set_error("Ocurrió un error al obtener los clientes de la BBDD. ", ERR_DB_QRY, 1);
              return FALSE;
          }
      }

      /**
       * get_clients_table()
       *
       *
       */
      public function get_clients_table()
      {
          if (IS_ADMIN)
          {
              $response = "";
              if (count($this->clients) > 0)
              {
                  foreach ($this->clients as $k => $record)
                  {
                      ob_start();
                      require DIRECTORY_VIEWS . "/lists/lst.client.php";
                      $response .= ob_get_clean();
                  }
              }
              return $response;
          }
          else
          {
              return "";
          }
      }

      /**
       * get_clients_options
       */
      public function get_clients_options($selected)
      {
          $html = "<option value='0'> Cliente </option>";
          foreach ($this->clients as $k => $ops)
          {
              $html .= "<option value='" . $ops->id_client . "' "
                      . ( $selected == $ops->id_client ? "selected='selected'" : "" )
                      . "  >" . $ops->client
                      . "</option>";
          }
          return $html;
      }

      /**
       * get_users_table()
       *
       *
       */
      public function get_users_table()
      {
          if (IS_ADMIN)
          {
              $response = "";
              if (count($this->prosa) > 0)
              {
                  foreach ($this->prosa as $k => $record)
                  { 
                      ob_start();
                      require DIRECTORY_VIEWS . "/lists/lst.user.php";
                      $response .= ob_get_clean();
                  }
              }
              return $response;
          }
          else
          {
              return "";
          }
      }
      
      /**
	   * get_prosa_users_list()
	   * 
	   */
      public function get_prosa_users_list(){
      	global $Session;
		if ( $Session->is_admin() ){
			 if (count($this->prosa) > 0) {
                  foreach ($this->prosa as $k => $record)
                  {
                      ob_start();
                      require DIRECTORY_VIEWS . "/lists/lst.user_prosa.php";
                      $response .= ob_get_clean();
                  }
              }
              return $response;
		} else {
			return "";
		}
      }
	  
	  public function get_services_users_prosa($user)
	  {
		$qry = 	 "select id_service, se_service, su_user, ".
				 "CASE WHEN NOT su_user IS NULL THEN 1 ELSE 0 END as checked ".
				 "from ". PFX_MAIN_DB ."service ".
				 "left join ". PFX_MAIN_DB ."service_user ON id_service = su_se_id_service AND su_user = '".$user."' ".
				 "WHERE se_status = 1 ORDER BY se_order ";
				 
		//$values = array( ":su_user" => $user );
		$db = new oracle_db();
		
		$result = $db->query($qry);
		
		$response = "";
		if($result)
		{
				foreach ($result as $key => $serv)
				{ 
						$record = array();
						$record['id_service'] = $serv['ID_SERVICE'];
						$record['service']	= utf8_decode($serv['SE_SERVICE'] );
						$record['checked'] 	= $serv['CHECKED'];
						$record['pfx'] 		= 'serv_user_prosa_'  . str_replace(".","_", strip_tags(trim($user))).'_';
						$record['function']	= "set_user_prosa_service('" . str_replace(".","_", strip_tags(trim($user))) . "', " . $serv['ID_SERVICE'] . ");";
						
						ob_start(); 
						require DIRECTORY_VIEWS . "/lists/lst.service_chk.php"; 
						$response .= ob_get_clean();
				}
			return $response;
		}
		else
		{
			$this->set_error("Ocurrio un error al cargar la informacion",ERR_DB_QRY);
			return FALSE;
		} 
	  }
      
      /**
       * validate()
       * Validates the values before inputing to Data Base
       *
       * @return        Boolean TRUE if valid; FALSE if invalid
       */
      public function validate()
      {
          return TRUE;
      }

      /**
       * clean()
       * Cleans all parameters and resets all objects
       *
       */
      public function clean()
      {
          $this->error = array();
          $this->clients = array();
      }

      /**
       * get_clients_table_edit()
       * tabla para editar clientes, y servicios del cliente
       *
       */
      public function get_clients_table_edit()
      {
          if (IS_ADMIN)
          {
              $response = "";
              if (count($this->clients) > 0)
              {
                  foreach ($this->clients as $k => $record)
                  {
                      ob_start();
                      require DIRECTORY_VIEWS . "/lists/lst.clientservice.php";
                      $response .= ob_get_clean();
                  }
              }
              return $response;
          }
          else
          {
              return "";
          }
      }

      public function get_users_attached($id_service)
      {
          $db = new oracle_db();

          $qry = "select * from " . PFX_MAIN_DB . "service_user where su_se_id_service = " . $id_service . " ";

          $result = $db->query($qry);
          $resp = array();

          if ($result)
          {

              $resp = '';
              foreach ($result as $k => $cod)
              {
                  $resp[] = $cod['SU_USER'];
              }
              return $resp;
          }
          else
          {
              return FALSE;
          }
      }

      public function get_service($id, $tipo){
          $db = new oracle_db();
          $qry = "SELECT * FROM " . PFX_MAIN_DB . "service_client WHERE " . ($tipo == 'service_client' ? "sc_se_id_service" : "sc_cl_id_client") . "=" . $id . " ";
          $result = $db->query($qry);
          $resp = array();

          if ($result)
          {
              $resp = '';

              foreach ($result as $key => $id_cliente)
              {
                  if (!empty($id_cliente))
                  {
                      $resp[] = ($tipo == 'service_client' ? $id_cliente['SC_CL_ID_CLIENT'] : $id_cliente['SC_SE_ID_SERVICE']);
                  }
              }

              if (count($resp) > 0)
              {
                  return $resp;
              }
              else
              {
                  return array();
              }
          }
          else
          {
              return FALSE;
          }
      }
}
?>
